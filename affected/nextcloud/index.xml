<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><link rel="alternate" type="text/html" href="https://info.linuxserver.io"/><title>nextcloud on Info :: LinuxServer.io</title><link>https://info.linuxserver.io/affected/nextcloud/</link><description>History</description><generator>github.com/cstate</generator><language>en</language><lastBuildDate>2023-11-02T23:00:00+00:00</lastBuildDate><updated>2023-11-02T23:00:00+00:00</updated><atom:link href="https://info.linuxserver.io/affected/nextcloud/index.xml" rel="self" type="application/rss+xml"/><item><title>Notification: Significant changes to cron</title><link>https://info.linuxserver.io/issues/2023-11-02-cron/</link><pubDate>Thu, 02 Nov 2023 23:00:00 +0000</pubDate><guid>https://info.linuxserver.io/issues/2023-11-02-cron/</guid><category/><description>We&amp;rsquo;ve decided to make some changes to how cron is shipped in our images.
Previous state of cron We have not had a consistent standard. Many of our images do however setup cron the same way. When an application requires cron, we setup crontabs for abc or root in /config/crontabs/. This has allowed users to customize crontabs.
This has required that if we make changes to the image that require changes to crontabs we have had to carefully plan how to make adjustments to existing user files without causing issues with any customizations.</description><content type="html">&lt;p>We&amp;rsquo;ve decided to make some changes to how cron is shipped in our images.&lt;/p>
&lt;h2 id="previous-state-of-cron">Previous state of cron&lt;/h2>
&lt;p>We have not had a consistent standard. Many of our images do however setup cron the same way. When an application requires cron, we setup crontabs for &lt;code>abc&lt;/code> or &lt;code>root&lt;/code> in &lt;code>/config/crontabs/&lt;/code>. This has allowed users to customize crontabs.&lt;/p>
&lt;p>This has required that if we make changes to the image that require changes to crontabs we have had to carefully plan how to make adjustments to existing user files without causing issues with any customizations. It could also mean we are unable to automatically make required changes if user customizations make an automated adjustments impossible. In these cases, users have been required to update crontabs on their own.&lt;/p>
&lt;p>As a side note, we also offer our &lt;a href="https://github.com/linuxserver/docker-mods/tree/universal-cron">universal cron mod&lt;/a> that can be applied to add the ability to use cron for both &lt;code>abc&lt;/code> and &lt;code>root&lt;/code> in any container.&lt;/p>
&lt;h2 id="going-forward">Going forward&lt;/h2>
&lt;p>When an application requires cron, we will also no longer setup crontabs for &lt;code>abc&lt;/code> or &lt;code>root&lt;/code> in &lt;code>/config/crontabs/&lt;/code>, unless user customizations to the crontab are required.&lt;/p>
&lt;p>Instead, we are internalizing the crontab files. This should make it easier for us to update crontabs when changes to the image require updates to crontabs. It also means users won&amp;rsquo;t have to keep up with changes to crontab requirements that may break their applications.&lt;/p>
&lt;p>&lt;strong>IMPORTANT:&lt;/strong> We are NOT removing existing crontabs from &lt;code>/config/crontabs/&lt;/code>, they will simply be ignored unless otherwise noted.&lt;/p>
&lt;p>We will continue to offer our &lt;a href="https://github.com/linuxserver/docker-mods/tree/universal-cron">universal cron mod&lt;/a> with a new purpose of making crontabs for &lt;code>abc&lt;/code> and &lt;code>root&lt;/code> customizable by setting them up in up &lt;code>/config/crontabs/&lt;/code> and configuring the cron service to recognize them, essentially restoring the original behavior. This effectively makes the cron mod the only way to customize crontabs.&lt;/p>
&lt;p>As a side note, we are also adjusting all existing crontabs we ship to run as &lt;code>abc&lt;/code> instead of &lt;code>root&lt;/code>. This improves security and consistency in our images.&lt;/p>
&lt;h3 id="exceptions">Exceptions&lt;/h3>
&lt;p>Diskover requires setting your own crontab schedule. The container will now run cron using &lt;code>/config/crontabs/abc&lt;/code> instead of &lt;code>/config/crontabs/root&lt;/code>. The &lt;code>/config/crontabs/root&lt;/code> file is NOT being automatically removed, but will be ignored.&lt;/p>
&lt;p>Rsnapshot requires setting your own crontab schedule, and in some cases requires backups to run as root. The container will continue to run cron using &lt;code>/config/crontabs/root&lt;/code>.&lt;/p>
&lt;h2 id="timing">Timing&lt;/h2>
&lt;p>You can expect to see these changes merge today, and begin building into our images over the next few days and weeks.&lt;/p></content></item><item><title>Notification: Significant changes to cron incoming</title><link>https://info.linuxserver.io/issues/2023-10-20-cron/</link><pubDate>Fri, 20 Oct 2023 23:00:00 +0000</pubDate><guid>https://info.linuxserver.io/issues/2023-10-20-cron/</guid><category/><description>We&amp;rsquo;ve decided to make some changes to how cron is shipped in our images.
Current state of cron We have not had a consistent standard. Many of our images do however setup cron the same way. When an application requires cron, we setup crontabs for abc or root in /config/crontabs/. This has allowed users to customize crontabs.
This has required that if we make changes to the image that require changes to crontabs we have had to carefully plan how to make adjustments to existing user files without causing issues with any customizations.</description><content type="html">&lt;p>We&amp;rsquo;ve decided to make some changes to how cron is shipped in our images.&lt;/p>
&lt;h2 id="current-state-of-cron">Current state of cron&lt;/h2>
&lt;p>We have not had a consistent standard. Many of our images do however setup cron the same way. When an application requires cron, we setup crontabs for &lt;code>abc&lt;/code> or &lt;code>root&lt;/code> in &lt;code>/config/crontabs/&lt;/code>. This has allowed users to customize crontabs.&lt;/p>
&lt;p>This has required that if we make changes to the image that require changes to crontabs we have had to carefully plan how to make adjustments to existing user files without causing issues with any customizations. It could also mean we are unable to automatically make required changes if user customizations make an automated adjustments impossible. In these cases, users have been required to update crontabs on their own.&lt;/p>
&lt;p>As a side note, we also offer our &lt;a href="https://github.com/linuxserver/docker-mods/tree/universal-cron">universal cron mod&lt;/a> that can be applied to add the ability to use cron for both &lt;code>abc&lt;/code> and &lt;code>root&lt;/code> in any container.&lt;/p>
&lt;h2 id="incoming-changes">Incoming changes&lt;/h2>
&lt;p>When an application requires cron, we will also no longer setup crontabs for &lt;code>abc&lt;/code> or &lt;code>root&lt;/code> in &lt;code>/config/crontabs/&lt;/code>, unless user customizations to the crontab are required.&lt;/p>
&lt;p>Instead, we are internalizing the crontab files. This should make it easier for us to update crontabs when changes to the image require updates to crontabs. It also means users won&amp;rsquo;t have to keep up with changes to crontab requirements that may break their applications.&lt;/p>
&lt;p>&lt;strong>IMPORTANT:&lt;/strong> We are NOT removing existing crontabs from &lt;code>/config/crontabs/&lt;/code>, they will simply be ignored unless otherwise noted.&lt;/p>
&lt;p>We will continue to offer our &lt;a href="https://github.com/linuxserver/docker-mods/tree/universal-cron">universal cron mod&lt;/a> with a new purpose of making crontabs for &lt;code>abc&lt;/code> and &lt;code>root&lt;/code> customizable by setting them up in up &lt;code>/config/crontabs/&lt;/code> and configuring the cron service to recognize them, essentially restoring the original behavior. This effectively makes the cron mod the only way to customize crontabs.&lt;/p>
&lt;p>As a side note, we are also adjusting all existing crontabs we ship to run as &lt;code>abc&lt;/code> instead of &lt;code>root&lt;/code>. This improves security and consistency in our images.&lt;/p>
&lt;h3 id="exceptions">Exceptions&lt;/h3>
&lt;p>Diskover requires setting your own crontab schedule. The container will now run cron using &lt;code>/config/crontabs/abc&lt;/code> instead of &lt;code>/config/crontabs/root&lt;/code>. The &lt;code>/config/crontabs/root&lt;/code> file is NOT being automatically removed, but will be ignored.&lt;/p>
&lt;p>Rsnapshot requires setting your own crontab schedule, and in some cases requires backups to run as root. The container will continue to run cron using &lt;code>/config/crontabs/root&lt;/code>.&lt;/p>
&lt;h2 id="timing">Timing&lt;/h2>
&lt;p>You can expect to see these changes merge around November 1st, 2023. An additional post will be made with all of the above information and any updates if anything changes between now and then.&lt;/p></content></item><item><title>Notification: Significant changes to cron incoming</title><link>https://info.linuxserver.io/issues/2023-10-01-cron/</link><pubDate>Sun, 01 Oct 2023 23:00:00 +0000</pubDate><guid>https://info.linuxserver.io/issues/2023-10-01-cron/</guid><category/><description>We&amp;rsquo;ve decided to make some changes to how cron is shipped in our images.
Current state of cron We have not had a consistent standard. Many of our images do however setup cron the same way. When an application requires cron, we setup crontabs for abc or root in /config/crontabs/. This has allowed users to customize crontabs.
This has required that if we make changes to the image that require changes to crontabs we have had to carefully plan how to make adjustments to existing user files without causing issues with any customizations.</description><content type="html">&lt;p>We&amp;rsquo;ve decided to make some changes to how cron is shipped in our images.&lt;/p>
&lt;h2 id="current-state-of-cron">Current state of cron&lt;/h2>
&lt;p>We have not had a consistent standard. Many of our images do however setup cron the same way. When an application requires cron, we setup crontabs for &lt;code>abc&lt;/code> or &lt;code>root&lt;/code> in &lt;code>/config/crontabs/&lt;/code>. This has allowed users to customize crontabs.&lt;/p>
&lt;p>This has required that if we make changes to the image that require changes to crontabs we have had to carefully plan how to make adjustments to existing user files without causing issues with any customizations. It could also mean we are unable to automatically make required changes if user customizations make an automated adjustments impossible. In these cases, users have been required to update crontabs on their own.&lt;/p>
&lt;p>As a side note, we also offer our &lt;a href="https://github.com/linuxserver/docker-mods/tree/universal-cron">universal cron mod&lt;/a> that can be applied to add the ability to use cron for both &lt;code>abc&lt;/code> and &lt;code>root&lt;/code> in any container.&lt;/p>
&lt;h2 id="incoming-changes">Incoming changes&lt;/h2>
&lt;p>When an application requires cron, we will also no longer setup crontabs for &lt;code>abc&lt;/code> or &lt;code>root&lt;/code> in &lt;code>/config/crontabs/&lt;/code>, unless user customizations to the crontab are required.&lt;/p>
&lt;p>Instead, we are internalizing the crontab files. This should make it easier for us to update crontabs when changes to the image require updates to crontabs. It also means users won&amp;rsquo;t have to keep up with changes to crontab requirements that may break their applications.&lt;/p>
&lt;p>&lt;strong>IMPORTANT:&lt;/strong> We are NOT removing existing crontabs from &lt;code>/config/crontabs/&lt;/code>, they will simply be ignored unless otherwise noted.&lt;/p>
&lt;p>We will continue to offer our &lt;a href="https://github.com/linuxserver/docker-mods/tree/universal-cron">universal cron mod&lt;/a> with a new purpose of making crontabs for &lt;code>abc&lt;/code> and &lt;code>root&lt;/code> customizable by setting them up in up &lt;code>/config/crontabs/&lt;/code> and configuring the cron service to recognize them, essentially restoring the original behavior. This effectively makes the cron mod the only way to customize crontabs.&lt;/p>
&lt;p>As a side note, we are also adjusting all existing crontabs we ship to run as &lt;code>abc&lt;/code> instead of &lt;code>root&lt;/code>. This improves security and consistency in our images.&lt;/p>
&lt;h3 id="exceptions">Exceptions&lt;/h3>
&lt;p>Diskover requires setting your own crontab schedule. The container will now run cron using &lt;code>/config/crontabs/abc&lt;/code> instead of &lt;code>/config/crontabs/root&lt;/code>. The &lt;code>/config/crontabs/root&lt;/code> file is NOT being automatically removed, but will be ignored.&lt;/p>
&lt;p>Rsnapshot requires setting your own crontab schedule, and in some cases requires backups to run as root. The container will continue to run cron using &lt;code>/config/crontabs/root&lt;/code>.&lt;/p>
&lt;h2 id="timing">Timing&lt;/h2>
&lt;p>You can expect to see these changes merge around November 1st, 2023. An additional post will be made with all of the above information and any updates if anything changes between now and then.&lt;/p></content></item><item><title>Notification: Changes to our Nextcloud image</title><link>https://info.linuxserver.io/issues/2023-06-25-nextcloud/</link><pubDate>Sun, 25 Jun 2023 22:00:00 +0000</pubDate><guid>https://info.linuxserver.io/issues/2023-06-25-nextcloud/</guid><category/><description>We are releasing a new version of our Nextcloud image that is built with the Nextcloud application inside the image, rather than in the user /config volume. This means manually updating Nextcloud via command line will no longer be necessary or supported. The updater.phar command is completely removed. Installations for existing users will be migrated automatically when updating the container image. All future updates to your Nextcloud instance will happen via container image updates.</description><content type="html">&lt;p>We are releasing a new version of our &lt;a href="https://github.com/linuxserver/docker-nextcloud/">Nextcloud image&lt;/a> that is built with the Nextcloud application inside the image, rather than in the user &lt;code>/config&lt;/code> volume. This means manually updating Nextcloud via command line will no longer be necessary or supported. The &lt;code>updater.phar&lt;/code> command is completely removed. Installations for existing users will be migrated automatically when updating the container image. All future updates to your Nextcloud instance will happen via container image updates.&lt;/p>
&lt;p>&lt;strong>Updating via the admin web UI is no longer supported.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Downgrading is not supported.&lt;/strong>&lt;/p>
&lt;p>An important thing to keep in mind is that systems that automatically update your container will result in irreversible changes to your Nextcloud instance. We recommend pinning a specific tagged version like &lt;code>lscr.io/linuxserver/nextcloud:version-27.0.0&lt;/code> and manually changing your image version when you are ready to upgrade.&lt;/p>
&lt;p>Excerpts from the updated README:&lt;/p>
&lt;h3 id="updating-nextcloud">Updating Nextcloud&lt;/h3>
&lt;p>Updating Nextcloud is done by pulling the new image, and recreating the container with it.&lt;/p>
&lt;p>It is only possible to upgrade one major version at a time. For example, if you want to upgrade from version 14 to 16, you will have to upgrade from version 14 to 15, then from 15 to 16.&lt;/p>
&lt;p>Since all data is stored in the &lt;code>/config&lt;/code> and &lt;code>/data&lt;/code> volumes, nothing gets lost. The startup script will check for the version in your volume and the installed docker version. If it finds a mismatch, it automatically starts the upgrade process.&lt;/p>
&lt;h3 id="cant-start-nextcloud">Can&amp;rsquo;t start Nextcloud&lt;/h3>
&lt;p>If after updating your container image you receive a message along these lines:&lt;/p>
&lt;blockquote>
&lt;p>Can&amp;rsquo;t start Nextcloud because the version of the data (&lt;code>#.#.#.#&lt;/code>) is more than one major version behind the docker image version (&lt;code>#.#.#.#&lt;/code>) and upgrading more than one major version is not supported. Please run an image tagged for the major version &lt;code>##&lt;/code> first.&amp;quot;&lt;/p>
&lt;/blockquote>
&lt;p>The version of Nextcloud that you have installed in your persistent &lt;code>/config&lt;/code> volume will need to be updated using an older image before you can use the new image.&lt;/p>
&lt;p>Major version images, to be used for upgrading:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Image/Tag&lt;/th>
&lt;th>PHP&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>lscr.io/linuxserver/nextcloud:version-26.0.2&lt;/code>&lt;/td>
&lt;td>8.2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>lscr.io/linuxserver/nextcloud:version-25.0.4&lt;/code>&lt;/td>
&lt;td>8.1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>lscr.io/linuxserver/nextcloud:version-24.0.12&lt;/code>&lt;/td>
&lt;td>8.1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>lscr.io/linuxserver/nextcloud:version-23.0.4&lt;/code>&lt;/td>
&lt;td>7.4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>lscr.io/linuxserver/nextcloud:version-22.2.3&lt;/code>&lt;/td>
&lt;td>7.4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>lscr.io/linuxserver/nextcloud:version-21.0.3&lt;/code>&lt;/td>
&lt;td>7.4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>lscr.io/linuxserver/nextcloud:version-20.0.7&lt;/code>&lt;/td>
&lt;td>7.4&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Package locked tags, listed for LSIO team reference:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Image/Tag&lt;/th>
&lt;th>PHP&lt;/th>
&lt;th>Notes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>lscr.io/linuxserver/nextcloud:26.0.2-ls245&lt;/code>&lt;/td>
&lt;td>8.1&lt;/td>
&lt;td>Last tag with PHP 8.1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>lscr.io/linuxserver/nextcloud:24.0.6-ls204&lt;/code>&lt;/td>
&lt;td>7.4&lt;/td>
&lt;td>Last tag with PHP 7.4&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>Check your &lt;code>/config/www/nextcloud/config/config.php&lt;/code> file or &lt;code>/config/www/nextcloud/version.php&lt;/code> file to determine the version you have installed&lt;/li>
&lt;li>Switch your image to the corresponding major version from the table above (ex: your files indicate &lt;code>24.x.x&lt;/code>, use &lt;code>lscr.io/linuxserver/nextcloud:version-24.0.12&lt;/code>) and start the container&lt;/li>
&lt;li>Run &lt;code>docker exec -it nextcloud updater.phar&lt;/code> &lt;strong>&lt;em>repeatedly&lt;/em>&lt;/strong> until you have updated to Nextcloud &lt;code>27.x.x&lt;/code>, or the updater says &lt;code>This version of Nextcloud is not compatible with &amp;gt; PHP x.x&lt;/code>&lt;/li>
&lt;li>Check your files again to determine the version you have installed
&lt;ul>
&lt;li>If your installed version is below 26, repeat the steps above until you get to version 26&lt;/li>
&lt;li>If your installed version is 26 or 27, continue with the instructions below&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Switch your image to &lt;code>lscr.io/linuxserver/nextcloud:version-27.0.0&lt;/code> and start the container. Note the &lt;code>updater.phar&lt;/code> is no longer available, or needed&lt;/li>
&lt;li>Run &lt;code>docker logs nextcloud&lt;/code> and check for any issues (report &lt;a href="https://github.com/linuxserver/docker-nextcloud/issues">issues on GitHub&lt;/a>)&lt;/li>
&lt;li>As of posting this information, Nextclouod 27 is the latest current version. If you are reading this after a new major version of Nextcloud beyond 27 is released, check &lt;a href="https://github.com/linuxserver/docker-nextcloud/releases">releases on GitHub&lt;/a> and proceed to switch to the next major version tag one by one until you are current. Updating more than one major version at a time is not supported&lt;/li>
&lt;li>You should now be able to switch your image to &lt;code>lscr.io/linuxserver/nextcloud&lt;/code> (no tag) if you prefer to run the latest image (although we do recommend pinning a specific version)&lt;/li>
&lt;li>Run &lt;code>docker exec -it nextcloud mv /config/nginx/site-confs/default.conf /config/nginx/site-confs/default.conf.bak&lt;/code>&lt;/li>
&lt;li>Run &lt;code>docker exec -it nextcloud mv /config/nginx/nginx.conf /config/nginx/nginx.conf.bak&lt;/code>&lt;/li>
&lt;li>Run &lt;code>docker restart nextcloud&lt;/code>&lt;/li>
&lt;li>Nextcloud should now be in a working state&lt;/li>
&lt;/ul>
&lt;p>Optional:&lt;/p>
&lt;ul>
&lt;li>If you had customized any of the nginx configs that were renamed above, compare the &lt;code>.bak&lt;/code> file to the new live file and apply any customizations you require. Note the &lt;code>root&lt;/code> line in &lt;code>site-confs/default.conf&lt;/code> should be changed from &lt;code>/config/www/nextcloud/&lt;/code> to &lt;code>/app/www/public&lt;/code>&lt;/li>
&lt;li>Remove the &lt;code>.bak&lt;/code> files&lt;/li>
&lt;/ul></content></item><item><title>Nextcloud php8 Tag Deprecation Notice</title><link>https://info.linuxserver.io/issues/2022-10-24-nextcloud/</link><pubDate>Tue, 25 Oct 2022 20:00:00 +0000</pubDate><guid>https://info.linuxserver.io/issues/2022-10-24-nextcloud/</guid><category/><description>We are deprecating the php8 tag/branch of our Nextcloud container. The latest tag (master branch) now uses php8.</description><content type="html">&lt;p>We are deprecating the &lt;code>php8&lt;/code> tag/branch of our &lt;a href="https://github.com/linuxserver/docker-nextcloud">Nextcloud container&lt;/a>. The &lt;code>latest&lt;/code> tag (master branch) now uses php8.&lt;/p></content></item><item><title>Notification: Significant changes to nginx based images</title><link>https://info.linuxserver.io/issues/2022-08-20-nginx-base/</link><pubDate>Sat, 20 Aug 2022 18:00:00 +0000</pubDate><guid>https://info.linuxserver.io/issues/2022-08-20-nginx-base/</guid><category/><description>Most images using our alpine-nginx base image are being updated to alpine 3.15 with php8 and some significant changes to the nginx configs.
Changes you will likely notice:
Bring our default shipped configs as close as possible to alpine upstream defaults https://git.alpinelinux.org/aports/tree/main/nginx/nginx.conf?h=3.15-stable Include worker_processes.conf and init script to generate it in the base Include resolver.conf and init script to generate it in the base Include ssl.conf in the base (the same as what is currently shipped in SWAG, but adjusted to use the self-signed certs generated by the base) include /config/nginx/site-confs/*.</description><content type="html">&lt;p>Most images using our alpine-nginx base image are being updated to alpine 3.15 with php8 and some significant changes to the nginx configs.&lt;/p>
&lt;p>Changes you will likely notice:&lt;/p>
&lt;ul>
&lt;li>Bring our default shipped configs as close as possible to alpine upstream defaults
&lt;ul>
&lt;li>&lt;a href="https://git.alpinelinux.org/aports/tree/main/nginx/nginx.conf?h=3.15-stable">https://git.alpinelinux.org/aports/tree/main/nginx/nginx.conf?h=3.15-stable&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Include &lt;code>worker_processes.conf&lt;/code> and init script to generate it in the base&lt;/li>
&lt;li>Include &lt;code>resolver.conf&lt;/code> and init script to generate it in the base&lt;/li>
&lt;li>Include &lt;code>ssl.conf&lt;/code> in the base (the same as what is currently shipped in SWAG, but adjusted to use the self-signed certs generated by the base)&lt;/li>
&lt;li>&lt;code>include /config/nginx/site-confs/*.conf;&lt;/code> with &lt;code>*.conf&lt;/code> extension (rename existing user files automatically)&lt;/li>
&lt;li>Rework &lt;code>default.conf&lt;/code>
&lt;ul>
&lt;li>Expect applications inside containers to exist at &lt;code>/app/www/public/&lt;/code>, and if that does not exist, use &lt;code>/config/www&lt;/code>&lt;/li>
&lt;li>Include ipv6 support&lt;/li>
&lt;li>deny access to &lt;code>.htaccess&lt;/code>/&lt;code>.htpasswd&lt;/code> files&lt;/li>
&lt;li>adjust php location and &lt;code>fastcgi_params&lt;/code> to use &lt;code>PATH_INFO&lt;/code> and mitigate &lt;code>HTTP_PROXY&lt;/code> vulnerability&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Restructure nginx configs
&lt;ul>
&lt;li>Configs in &lt;code>/defaults/nginx/&lt;/code> are recursively copied to the user&amp;rsquo;s &lt;code>/config/nginx/&lt;/code> (maintaining the structure)&lt;/li>
&lt;li>All configs are now named &lt;code>*.sample&lt;/code> and all include &lt;code>## Version YYYY/MM/DD - Changelog: &amp;lt;url to repo history&amp;gt;&lt;/code> used by &lt;code>/etc/cont-init.d/85-version-checks&lt;/code>
&lt;ul>
&lt;li>Required configs (&lt;code>/config/nginx/nginx.conf&lt;/code>, &lt;code>/config/nginx/server-confs/ssl.conf&lt;/code> and &lt;code>/config/nginx/site-confs/default.conf&lt;/code>) are enabled by default. Downstream images can include and/or enable others as needed (ex: SWAG will enable &lt;code>/config/nginx/location-confs/proxy.conf&lt;/code> and &lt;code>/config/nginx/server-confs/502.conf&lt;/code>)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Folder structure is as follows (in the &lt;code>/config/nginx/&lt;/code> context):
&lt;ul>
&lt;li>All nginx based images:
&lt;ul>
&lt;li>Includes &lt;code>nginx.conf&lt;/code> (enabled by default)&lt;/li>
&lt;li>Includes &lt;code>resolver.conf&lt;/code> (enabled by default)&lt;/li>
&lt;li>Includes &lt;code>ssl.conf&lt;/code> (enabled by default)&lt;/li>
&lt;li>Includes &lt;code>worker_processes.conf&lt;/code> (enabled by default)&lt;/li>
&lt;li>&lt;code>/config/nginx/site-confs/*&lt;/code> included inside the &lt;code>http&lt;/code> context in &lt;code>/config/nginx/nginx.conf&lt;/code>
&lt;ul>
&lt;li>Includes &lt;code>default.conf&lt;/code> (enabled by default)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>SWAG:
&lt;ul>
&lt;li>Includes &lt;code>502.conf&lt;/code> (enabled by default)&lt;/li>
&lt;li>Includes &lt;code>authelia-location.conf&lt;/code>&lt;/li>
&lt;li>Includes &lt;code>authelia-server.conf&lt;/code>&lt;/li>
&lt;li>Includes &lt;code>ldap-location.conf&lt;/code>&lt;/li>
&lt;li>Includes &lt;code>ldap-server.conf&lt;/code>&lt;/li>
&lt;li>Includes &lt;code>proxy.conf&lt;/code> (enabled by default)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Under the hood:&lt;/p>
&lt;ul>
&lt;li>Split out init scripts
&lt;ul>
&lt;li>&lt;code>root/migrations/01-nginx-site-confs-default&lt;/code> migrate existing &lt;code>default&lt;/code> to &lt;code>default.conf&lt;/code>&lt;/li>
&lt;li>&lt;code>root/etc/cont-init.d/11-folders&lt;/code> creates all the folders needed in &lt;code>/config&lt;/code>&lt;/li>
&lt;li>&lt;code>root/etc/cont-init.d/12-samples&lt;/code> removes existing &lt;code>*.sample&lt;/code> files from &lt;code>/config/nginx&lt;/code> and copies any included &lt;code>*.sample&lt;/code> files from the image&lt;/li>
&lt;li>&lt;code>root/etc/cont-init.d/13-nginx&lt;/code> enable required configs (&lt;code>nginx.conf&lt;/code>, &lt;code>ssl.conf&lt;/code> and &lt;code>default.conf&lt;/code>) if they don&amp;rsquo;t exist, setup &lt;code>dhparams.pem&lt;/code>, setup &lt;code>resolver.conf&lt;/code>, setup &lt;code>worker_processes.conf&lt;/code>&lt;/li>
&lt;li>&lt;code>root/etc/cont-init.d/14-php&lt;/code> configure php&lt;/li>
&lt;li>&lt;code>root/etc/cont-init.d/15-keygen&lt;/code> create self signed certificates for &lt;code>ssl.conf&lt;/code>&lt;/li>
&lt;li>&lt;code>root/etc/cont-init.d/20-permissions&lt;/code> set &lt;code>/config&lt;/code> permissions&lt;/li>
&lt;li>&lt;code>root/etc/cont-init.d/85-version-checks&lt;/code> check all enabled &lt;code>*.conf&lt;/code> files against all &lt;code>*.sample&lt;/code> files shipped with the image and alert the user about updates&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Status of affected images:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Image&lt;/th>
&lt;th>Branch&lt;/th>
&lt;th>PR&lt;/th>
&lt;th>Notes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>baseimage-alpine-nginx&lt;/td>
&lt;td>master&lt;/td>
&lt;td>&lt;a href="https://github.com/linuxserver/docker-baseimage-alpine-nginx/pull/84">https://github.com/linuxserver/docker-baseimage-alpine-nginx/pull/84&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>bookstack&lt;/td>
&lt;td>master&lt;/td>
&lt;td>&lt;a href="https://github.com/linuxserver/docker-bookstack/pull/113">https://github.com/linuxserver/docker-bookstack/pull/113&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>cops&lt;/td>
&lt;td>master&lt;/td>
&lt;td>&lt;a href="https://github.com/linuxserver/docker-cops/pull/34">https://github.com/linuxserver/docker-cops/pull/34&lt;/a>&lt;/td>
&lt;td>composer downgraded to v1 for compatibility&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>diskover&lt;/td>
&lt;td>master&lt;/td>
&lt;td>&lt;a href="https://github.com/linuxserver/docker-diskover/pull/43">https://github.com/linuxserver/docker-diskover/pull/43&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dokuwiki&lt;/td>
&lt;td>master&lt;/td>
&lt;td>&lt;a href="https://github.com/linuxserver/docker-dokuwiki/pull/43">https://github.com/linuxserver/docker-dokuwiki/pull/43&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>freshrss&lt;/td>
&lt;td>master&lt;/td>
&lt;td>&lt;a href="https://github.com/linuxserver/docker-freshrss/pull/40">https://github.com/linuxserver/docker-freshrss/pull/40&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>grav&lt;/td>
&lt;td>main&lt;/td>
&lt;td>&lt;a href="https://github.com/linuxserver/docker-grav/pull/9">https://github.com/linuxserver/docker-grav/pull/9&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>grocy&lt;/td>
&lt;td>master&lt;/td>
&lt;td>&lt;a href="https://github.com/linuxserver/docker-grocy/pull/52">https://github.com/linuxserver/docker-grocy/pull/52&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>heimdall&lt;/td>
&lt;td>main&lt;/td>
&lt;td>&lt;a href="https://github.com/linuxserver/docker-heimdall/pull/79">https://github.com/linuxserver/docker-heimdall/pull/79&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>librespeed&lt;/td>
&lt;td>master&lt;/td>
&lt;td>&lt;a href="https://github.com/linuxserver/docker-librespeed/pull/15">https://github.com/linuxserver/docker-librespeed/pull/15&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>lychee&lt;/td>
&lt;td>master&lt;/td>
&lt;td>&lt;a href="https://github.com/linuxserver/docker-lychee/pull/51">https://github.com/linuxserver/docker-lychee/pull/51&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>muximux&lt;/td>
&lt;td>master&lt;/td>
&lt;td>&lt;a href="https://github.com/linuxserver/docker-muximux/pull/26">https://github.com/linuxserver/docker-muximux/pull/26&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>nextcloud&lt;/td>
&lt;td>master&lt;/td>
&lt;td>&lt;a href="https://github.com/linuxserver/docker-nextcloud/pull/219">https://github.com/linuxserver/docker-nextcloud/pull/219&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>nginx&lt;/td>
&lt;td>master&lt;/td>
&lt;td>&lt;a href="https://github.com/linuxserver/docker-nginx/pull/79">https://github.com/linuxserver/docker-nginx/pull/79&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>photoshow&lt;/td>
&lt;td>master&lt;/td>
&lt;td>&lt;a href="https://github.com/linuxserver/docker-photoshow/pull/28">https://github.com/linuxserver/docker-photoshow/pull/28&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://info.linuxserver.io/issues/2022-10-14-photoshow/">Deprecated&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>phpmyadmin&lt;/td>
&lt;td>main&lt;/td>
&lt;td>&lt;a href="https://github.com/linuxserver/docker-phpmyadmin/pull/12">https://github.com/linuxserver/docker-phpmyadmin/pull/12&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>piwigo&lt;/td>
&lt;td>master&lt;/td>
&lt;td>&lt;a href="https://github.com/linuxserver/docker-piwigo/pull/49">https://github.com/linuxserver/docker-piwigo/pull/49&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>pixapop&lt;/td>
&lt;td>master&lt;/td>
&lt;td>&lt;a href="https://github.com/linuxserver/docker-pixapop/pull/11">https://github.com/linuxserver/docker-pixapop/pull/11&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://info.linuxserver.io/issues/2022-10-14-pixapop">Deprecated&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>projectsend&lt;/td>
&lt;td>master&lt;/td>
&lt;td>&lt;a href="https://github.com/linuxserver/docker-projectsend/pull/22">https://github.com/linuxserver/docker-projectsend/pull/22&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>snapdrop&lt;/td>
&lt;td>master&lt;/td>
&lt;td>&lt;a href="https://github.com/linuxserver/docker-snapdrop/pull/6">https://github.com/linuxserver/docker-snapdrop/pull/6&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>snipe-it&lt;/td>
&lt;td>master&lt;/td>
&lt;td>&lt;a href="https://github.com/linuxserver/docker-snipe-it/pull/28">https://github.com/linuxserver/docker-snipe-it/pull/28&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>swag&lt;/td>
&lt;td>master&lt;/td>
&lt;td>&lt;a href="https://github.com/linuxserver/docker-swag/pull/169">https://github.com/linuxserver/docker-swag/pull/169&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>xbackbone&lt;/td>
&lt;td>main&lt;/td>
&lt;td>&lt;a href="https://github.com/linuxserver/docker-xbackbone/pull/5">https://github.com/linuxserver/docker-xbackbone/pull/5&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Any images with notes above may not be merged. We will make efforts to update this page if any of the images with notes above are merged at a later date. We may also make individual announcements about status updates regarding these images.&lt;/p></content></item><item><title>New Container: Nextcloud</title><link>https://info.linuxserver.io/issues/2017-03-07-nextcloud/</link><pubDate>Tue, 07 Mar 2017 00:00:00 +0000</pubDate><guid>https://info.linuxserver.io/issues/2017-03-07-nextcloud/</guid><category/><description>We have released a new container for Nextcloud!
Nextcloud gives you access to all your files wherever you are.
Where are your photos and documents? With Nextcloud you pick a server of your choice, at home, in a data center or at a provider. And that is where your files will be. Nextcloud runs on that server, protecting your data and giving you access from your desktop or mobile devices. Through Nextcloud you also access, sync and share your existing data on that FTP drive at the office, a Dropbox or a NAS you have at home.</description><content type="html">&lt;p>We have released a new container for &lt;a href="https://github.com/linuxserver/docker-nextcloud">Nextcloud&lt;/a>!&lt;/p>
&lt;p>&lt;a href="https://nextcloud.com/">Nextcloud&lt;/a> gives you access to all your files wherever you are.&lt;/p>
&lt;p>Where are your photos and documents? With Nextcloud you pick a server of your choice, at home, in a data center or at a provider. And that is where your files will be. Nextcloud runs on that server, protecting your data and giving you access from your desktop or mobile devices. Through Nextcloud you also access, sync and share your existing data on that FTP drive at the office, a Dropbox or a NAS you have at home.&lt;/p></content></item></channel></rss>