<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><link rel="alternate" type="text/html" href="https://info.linuxserver.io"/><title>wireguard on Info :: LinuxServer.io</title><link>https://info.linuxserver.io/affected/wireguard/</link><description>History</description><generator>github.com/cstate</generator><language>en</language><lastBuildDate>2024-10-27T20:00:00+00:00</lastBuildDate><updated>2024-10-27T20:00:00+00:00</updated><atom:link href="https://info.linuxserver.io/affected/wireguard/index.xml" rel="self" type="application/rss+xml"/><item><title>Reminder: Wireguard Legacy Tag Deprecation</title><link>https://info.linuxserver.io/issues/2024-10-27-wireguard/</link><pubDate>Sun, 27 Oct 2024 20:00:00 +0000</pubDate><guid>https://info.linuxserver.io/issues/2024-10-27-wireguard/</guid><category/><description>A little over a year ago we updated our default Wireguard image to no longer support building the Wireguard kernel modules and moved that functionality to the legacy tag. We did this on the basis that most users were running a kernel that already had built-in Wireguard support (5.6 or above in terms of official kernel releases) and this allowed us to reduce the size of the default image by 600Mb for them.</description><content type="html">&lt;p>A little over a year ago we updated our default Wireguard image to no longer support building the Wireguard kernel modules and moved that functionality to the &lt;code>legacy&lt;/code> tag. We did this on the basis that most users were running a kernel that already had built-in Wireguard support (5.6 or above in terms of official kernel releases) and this allowed us to reduce the size of the default image by 600Mb for them.&lt;/p>
&lt;p>Revisiting the situation now we see that the vast majority of users are now either running a kernel with built-in Wireguard support &lt;em>or&lt;/em> a custom kernel, such as on a VPS or NAS, which we have never supported building for. As a result we have decided to deprecate the &lt;code>legacy&lt;/code> tag from the end of 2024.&lt;/p>
&lt;p>In practice this means there&amp;rsquo;s only one case where there will be a still-supported kernel version that doesn&amp;rsquo;t have built-in Wireguard support: 4.19, which goes EOL at the end of 2025. Our stats show a tiny handful of users that this applies to.&lt;/p>
&lt;p>If you are still running a 4.19 kernel, or are running any other EOL pre-5.6 kernel, and for whatever reason cannot upgrade then your only option will be to build the Wireguard kernel modules &lt;em>on the host&lt;/em>, which the default image (using the &lt;code>latest&lt;/code> tag) will then be able to make use of.&lt;/p>
&lt;p>We will provide additional reminders of this deprecation towards the end of the year.&lt;/p></content></item><item><title>Wireguard Legacy Tag Deprecation</title><link>https://info.linuxserver.io/issues/2024-07-16-wireguard/</link><pubDate>Tue, 16 Jul 2024 18:00:00 +0000</pubDate><guid>https://info.linuxserver.io/issues/2024-07-16-wireguard/</guid><category/><description>A little over a year ago we updated our default Wireguard image to no longer support building the Wireguard kernel modules and moved that functionality to the legacy tag. We did this on the basis that most users were running a kernel that already had built-in Wireguard support (5.6 or above in terms of official kernel releases) and this allowed us to reduce the size of the default image by 600Mb for them.</description><content type="html">&lt;p>A little over a year ago we updated our default Wireguard image to no longer support building the Wireguard kernel modules and moved that functionality to the &lt;code>legacy&lt;/code> tag. We did this on the basis that most users were running a kernel that already had built-in Wireguard support (5.6 or above in terms of official kernel releases) and this allowed us to reduce the size of the default image by 600Mb for them.&lt;/p>
&lt;p>Revisiting the situation now we see that the vast majority of users are now either running a kernel with built-in Wireguard support &lt;em>or&lt;/em> a custom kernel, such as on a VPS or NAS, which we have never supported building for. As a result we have decided to deprecate the &lt;code>legacy&lt;/code> tag from the end of 2024.&lt;/p>
&lt;p>In practice this means there&amp;rsquo;s only one case where there will be a still-supported kernel version that doesn&amp;rsquo;t have built-in Wireguard support: 4.19, which goes EOL at the end of 2025. Our stats show a tiny handful of users that this applies to.&lt;/p>
&lt;p>If you are still running a 4.19 kernel, or are running any other EOL pre-5.6 kernel, and for whatever reason cannot upgrade then your only option will be to build the Wireguard kernel modules &lt;em>on the host&lt;/em>, which the default image (using the &lt;code>latest&lt;/code> tag) will then be able to make use of.&lt;/p>
&lt;p>We will provide additional reminders of this deprecation towards the end of the year.&lt;/p></content></item><item><title>Notification: Changes to Wireguard image tags</title><link>https://info.linuxserver.io/issues/2023-04-27-wireguard/</link><pubDate>Thu, 27 Apr 2023 12:00:00 +0000</pubDate><guid>https://info.linuxserver.io/issues/2023-04-27-wireguard/</guid><category/><description>We will shortly be making changes to the tags available for our Wireguard image.
Currently we offer two tags: latest and alpine. The former uses our Ubuntu base image and contains all of the tools and dependencies required to compile the Wireguard kernel modules from scratch if your host kernel is too old to have it built-in. The latter uses our Alpine base image and does not contain the build tools and dependencies, which means it will only work on hosts that already have the Wireguard kernel modules installed and running.</description><content type="html">&lt;p>We will shortly be making changes to the tags available for our &lt;a href="https://github.com/linuxserver/docker-wireguard">Wireguard&lt;/a> image.&lt;/p>
&lt;p>Currently we offer two tags: &lt;code>latest&lt;/code> and &lt;code>alpine&lt;/code>. The former uses our Ubuntu base image and contains all of the tools and dependencies required to compile the Wireguard kernel modules from scratch if your host kernel is too old to have it built-in. The latter uses our Alpine base image and does &lt;em>not&lt;/em> contain the build tools and dependencies, which means it will only work on hosts that already have the Wireguard kernel modules installed and running.&lt;/p>
&lt;p>Almost all kernel builds since 5.6 come with Wireguard included, along with some older ones that have had it backported, which means that shipping an extra 800Mb of image by default to support those running old kernels is increasingly unnecessary.&lt;/p>
&lt;p>As a result, we&amp;rsquo;re going to switch our tags around to make the Alpine-based image the default.&lt;/p>
&lt;ul>
&lt;li>If you&amp;rsquo;re currently using the &lt;code>latest&lt;/code> tag you&amp;rsquo;ll soon automatically get switched to the Alpine-based build.&lt;/li>
&lt;li>If you&amp;rsquo;re currently using the &lt;code>alpine&lt;/code> tag you&amp;rsquo;ll need to switch to &lt;code>latest&lt;/code> to continue receiving updates.&lt;/li>
&lt;li>If you&amp;rsquo;re still running an old kernel and need the build support, you&amp;rsquo;ll need to switch to the &lt;code>legacy&lt;/code> tag.&lt;/li>
&lt;/ul></content></item><item><title>New Container: Wireguard</title><link>https://info.linuxserver.io/issues/2020-03-31-wireguard/</link><pubDate>Tue, 31 Mar 2020 00:00:00 +0000</pubDate><guid>https://info.linuxserver.io/issues/2020-03-31-wireguard/</guid><category/><description>We have released a new container for Wireguard!
WireGuard® is an extremely simple yet fast and modern VPN that utilizes state-of-the-art cryptography. It aims to be faster, simpler, leaner, and more useful than IPsec, while avoiding the massive headache. It intends to be considerably more performant than OpenVPN. WireGuard is designed as a general purpose VPN for running on embedded interfaces and super computers alike, fit for many different circumstances. Initially released for the Linux kernel, it is now cross-platform (Windows, macOS, BSD, iOS, Android) and widely deployable.</description><content type="html">&lt;p>We have released a new container for &lt;a href="https://github.com/linuxserver/docker-wireguard">Wireguard&lt;/a>!&lt;/p>
&lt;p>&lt;a href="https://www.wireguard.com/">WireGuard®&lt;/a> is an extremely simple yet fast and modern VPN that utilizes state-of-the-art cryptography. It aims to be faster, simpler, leaner, and more useful than IPsec, while avoiding the massive headache. It intends to be considerably more performant than OpenVPN. WireGuard is designed as a general purpose VPN for running on embedded interfaces and super computers alike, fit for many different circumstances. Initially released for the Linux kernel, it is now cross-platform (Windows, macOS, BSD, iOS, Android) and widely deployable. It is currently under heavy development, but already it might be regarded as the most secure, easiest to use, and simplest VPN solution in the industry.&lt;/p></content></item></channel></rss>